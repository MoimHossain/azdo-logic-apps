{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "CheckInProgressSetupRequired": {
                "actions": {
                    "Update_a_work_item_2": {
                        "inputs": {
                            "body": {
                                "dynamicFields": {
                                    "System.State": "@{string('In Progress')}"
                                }
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "/_apis/wit/workitems/@{encodeURIComponent(body('GetFeature')?['id'])}",
                            "queries": {
                                "account": "mohossa",
                                "project": "Octolamp",
                                "type": "Feature"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@variables('varInProgress')",
                                "@bool(true)"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "CheckStatusUpdateRequired": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "CheckStatusUpdateRequired": {
                "actions": {
                    "Update_a_work_item": {
                        "inputs": {
                            "body": {
                                "dynamicFields": {
                                    "System.State": "Done"
                                }
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "/_apis/wit/workitems/@{encodeURIComponent(body('GetFeature')?['id'])}",
                            "queries": {
                                "account": "mohossa",
                                "project": "Octolamp",
                                "type": "Product Backlog Item"
                            }
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@variables('varClosed')",
                                "@bool(true)"
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "For_each": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "For_each": {
                "actions": {
                    "Compose": {
                        "inputs": "@items('For_each')",
                        "runAfter": {},
                        "type": "Compose"
                    },
                    "ConditionClosedState": {
                        "actions": {
                            "EvaluateTrue": {
                                "inputs": {
                                    "name": "varTemp",
                                    "value": "@and(bool(true), variables('varClosed'))"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            },
                            "UpdateTotalStateForTrue": {
                                "inputs": {
                                    "name": "varClosed",
                                    "value": "@bool(variables('varTemp'))"
                                },
                                "runAfter": {
                                    "EvaluateTrue": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "SetVariable"
                            }
                        },
                        "else": {
                            "actions": {
                                "EvaluateFalse": {
                                    "inputs": {
                                        "name": "varTemp",
                                        "value": "@and(bool(false), variables('varClosed'))"
                                    },
                                    "runAfter": {},
                                    "type": "SetVariable"
                                },
                                "UpdateTotalStateForFalse": {
                                    "inputs": {
                                        "name": "varClosed",
                                        "value": "@bool(variables('varTemp'))"
                                    },
                                    "runAfter": {
                                        "EvaluateFalse": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "equals": [
                                        "@body('GetPBIState')?['fields']?['System_State']",
                                        "@string('Done')"
                                    ]
                                }
                            ]
                        },
                        "runAfter": {
                            "GetPBIState": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    },
                    "ConditionInProgressState": {
                        "actions": {
                            "EvaluateTrueForInprogress": {
                                "inputs": {
                                    "name": "varTemp",
                                    "value": "@or(bool(true), variables('varInProgress'))"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            },
                            "UpdateInProgressIndicatorForTrue": {
                                "inputs": {
                                    "name": "varInProgress",
                                    "value": "@bool(variables('varTemp'))"
                                },
                                "runAfter": {
                                    "EvaluateTrueForInprogress": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "SetVariable"
                            }
                        },
                        "else": {
                            "actions": {
                                "EvaluateFalseForInProgress": {
                                    "inputs": {
                                        "name": "varTemp",
                                        "value": "@or(bool(false), variables('varInProgress'))"
                                    },
                                    "runAfter": {},
                                    "type": "SetVariable"
                                },
                                "UpdateInProgressIndictorForFalse": {
                                    "inputs": {
                                        "name": "varInProgress",
                                        "value": "@bool(variables('varTemp'))"
                                    },
                                    "runAfter": {
                                        "EvaluateFalseForInProgress": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            }
                        },
                        "expression": {
                            "or": [
                                {
                                    "equals": [
                                        "@body('GetPBIState')?['fields']?['System_State']",
                                        "@string('Committed')"
                                    ]
                                },
                                {
                                    "equals": [
                                        "@body('GetPBIState')?['fields']?['System_State']",
                                        "@string('Approved')"
                                    ]
                                }
                            ]
                        },
                        "runAfter": {
                            "ConditionClosedState": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    },
                    "GetPBIState": {
                        "inputs": {
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                }
                            },
                            "method": "get",
                            "path": "/_apis/wit/workitems/@{encodeURIComponent(items('For_Each')?['WorkItemID'])}",
                            "queries": {
                                "account": "mohossa",
                                "project": "Octolamp",
                                "typeName": "Product Backlog Item"
                            }
                        },
                        "runAfter": {
                            "Compose": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('Select')",
                "runAfter": {
                    "Select": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "concurrency": {
                        "repetitions": 1
                    }
                },
                "type": "Foreach"
            },
            "GetFeature": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/_apis/wit/workitems/@{encodeURIComponent(int(triggerBody()?['Fields']?['System_Parent']))}",
                    "queries": {
                        "account": "mohossa",
                        "project": "Octolamp",
                        "typeName": "Feature"
                    }
                },
                "runAfter": {
                    "GetUpdatedItemDetails": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "GetFeatureChildren": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/_apis/wit/workitems/@{encodeURIComponent(body('GetFeature')?['id'])}/children",
                    "queries": {
                        "account": "mohossa",
                        "project": "Octolamp",
                        "workItemType": "Product Backlog Item"
                    }
                },
                "runAfter": {
                    "GetFeature": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "GetUpdatedItemDetails": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/_apis/wit/workitems/@{encodeURIComponent(triggerBody()?['id'])}",
                    "queries": {
                        "account": "mohossa",
                        "project": "Octolamp",
                        "typeName": "Product Backlog Item"
                    }
                },
                "runAfter": {
                    "Initialize_variable": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "InitVariable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "varClosed",
                            "type": "boolean",
                            "value": "@bool(true)"
                        }
                    ]
                },
                "runAfter": {
                    "initVarInProgress": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "varTemp",
                            "type": "boolean",
                            "value": "@bool(false)"
                        }
                    ]
                },
                "runAfter": {
                    "InitVariable": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Select": {
                "inputs": {
                    "from": "@body('GetFeatureChildren')?['value']",
                    "select": {
                        "WorkItemID": "@item()?['System.Id']"
                    }
                },
                "runAfter": {
                    "GetFeatureChildren": [
                        "Succeeded"
                    ]
                },
                "type": "Select"
            },
            "initVarInProgress": {
                "inputs": {
                    "variables": [
                        {
                            "name": "varInProgress",
                            "type": "boolean",
                            "value": "@bool(false)"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "WorkItemUpdateTrigger": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/v2/workitemupdated_trigger/@{encodeURIComponent('Octolamp')}/_apis/wit/wiql",
                    "queries": {
                        "account": "mohossa",
                        "wiql__System_WorkItemType": "Product Backlog Item"
                    }
                },
                "recurrence": {
                    "frequency": "Second",
                    "interval": 30
                },
                "splitOn": "@triggerBody()?['value']",
                "type": "ApiConnection"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "visualstudioteamservices": {
                    "connectionId": "/subscriptions/<Subscription ID>/resourceGroups/logic-apps-collection/providers/Microsoft.Web/connections/visualstudioteamservices",
                    "connectionName": "visualstudioteamservices",
                    "id": "/subscriptions/<Subscription ID>/providers/Microsoft.Web/locations/westeurope/managedApis/visualstudioteamservices"
                }
            }
        }
    }
}
